[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mTree"
dynamic = ["version"]
dependencies = [
    'thespian==3.10.7',
    'Flask==3.0.2',
    'Flask-SocketIO==5.3.6',
    'Flask-APScheduler==1.12.3',
    'Flask-BasicAuth==0.2.0',
    'Flask-SQLAlchemy==2.5.1',
    'eventlet',
    'numpy==1.22.2',
    'python-socketio==5.11.1',
    'pyfiglet==0.8.post1',
    'jsonschema==4.4.0',
    'requests==2.27.1',
    'markdown==3.3.6',
    'python-json-logger==2.0.2',
    'python-engineio==4.9.0',
    'simple-term-menu==1.3.0',
    'sympy==1.9',
    'terminaltables==3.1.10',
    'textual',
    'dnspython',
    'bump-my-version==0.19.0',
    'towncrier==23.11.0',
    'setproctitle==1.3.3'
]
requires-python = ">=3.11"
authors = [
  {name = "GMU CEELAB", email = "mtree.email@gmail.com"}
]
maintainers = [
  {name = "GMU CEELAB", email = "mtree.email@gmail.com"}
]
description = "The mTree Computational Microeconomics Package"
readme = "README.md"
license = "MIT"
keywords = ["computational experimental economics"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python"
]

[tool.hatch.version]
path = "mTree/version.py"

[project.urls]
Homepage = "https://mtree.readthedocs.io/"
Documentation = "https://mtree.readthedocs.io/"
Repository = "https://github.com/gmucsn/mTree"
"Bug Tracker" = "https://github.com/gmucsn/mTree/issues"
Changelog = "https://github.com/gmucsn/mTree/master/CHANGELOG.md"

[project.scripts]
mTree_runner = "mTree.scripts.mTree_runner:main"
mTree_developer_server = "mTree.scripts.mTree_developer_server:main"
mTree_console = "mTree.utilities.mtree_console:main"

[tool.towncrier]
# package = "mTree"
directory = "changes"
filename = "CHANGELOG.md"

[tool.bumpversion]
current_version = "2.0.0-pre1"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -                             # dash seperator for pre-release section
        (?P<pre_l>[a-zA-Z-]+)         # pre-release label
        (?P<pre_n>0|[1-9]\\d*)        # pre-release version number
    )?                                # pre-release section is optional
"""
serialize = [
    "{major}.{minor}.{patch}-{pre_l}{pre_n}",
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

[tool.bumpversion.parts.pre_l]
values = ["dev", "rc", "final"]
optional_value = "final"

[[tool.bumpversion.files]]
filename = 'mTree/version.py'
search = "__date__ = '\\d{{4}}-\\d{{2}}-\\d{{2}}'"
replace = "__date__ = '{now:%Y-%m-%d}'"
regex = true

[[tool.bumpversion.files]]
filename = "mTree/version.py"